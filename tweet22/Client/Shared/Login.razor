@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService
@inject IToastService ToastService

<p class="mb-3">Please log in below or <a href="register">register</a> for a new account.</p>

<EditForm Model="user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group mb-3">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control mb-3"></InputText>
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control mb-3" type="password"></InputText>
    </div>
    <button type="submit" class="btn btn-primary mb-3">Login</button>
    <ValidationSummary />
</EditForm>

@code {
    private UserLogin user = new UserLogin();

    private async void HandleLogin()
    {
        var result = await AuthService.Login(user);
        if (result.Success)
        {
            await LocalStorage.SetItemAsync<string>("authToken", result.Data);
            await AuthenticationStateProvider.GetAuthenticationStateAsync();
            ToastService.ShowSuccess("Successfully logged in ✅");
        }
        else
        {
            ToastService.ShowError(result.Message);
        }

    }
}