@page "/register"
@inject IUnitService UnitService
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject IAuthService AuthService 

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group mb-3">
        <label for="username" class="required">Username</label>
        <InputText id="username" @bind-Value="user.Username" class="form-control mb-3"></InputText>
        <ValidationMessage For="@(() => user.Username)" />
    </div>
    <div class="form-group mb-3">
        <label for="email" class="required">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control mb-3"></InputText>
        <ValidationMessage For="@(() => user.Email)" />
    </div>
    <div class="form-group mb-3">
        <label for="password" class="required">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control mb-3" type="password"></InputText>
        <ValidationMessage For="@(() => user.Password)" />
    </div>
    <div class="form-group mb-3">
        <label for="password">Confirm Password</label>
        <InputText id="password" @bind-Value="user.ConfirmPassword" class="form-control mb-3" type="password"></InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)" />
    </div>
    <div class="form-group mb-3">
        <label for="bio">Bio</label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control mb-3"></InputTextArea>
    </div>
    <div class="form-group mb-3">
        <label for="startUnitId">Start Unit Id</label><br />
        @*<InputSelect id="startUnitId" @bind-Value="user.StartUnitId" class="form-control">
                @foreach (var unit in UnitService.Units)
                {
                    <option value="@unit.Id">@unit.Title</option>
                }
            </InputSelect>*@
        <InputRadioGroup id="startUnitId" @bind-Value="user.StartUnitId" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                <InputRadio Value="@unit.Id" /><span style="padding-left: 5px;">@unit.Title</span><br />
            }
        </InputRadioGroup>
    </div>
    <div class="form-group mb-3">
        <label for="bananas">Bananas</label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control mb-3"></InputNumber>
        <ValidationMessage For="@(() => user.Bananas)" />
    </div>
    <div class="form-group mb-3">
        <label for="dateOfBirth">Date of Birth</label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control mb-3"></InputDate>
        <ValidationMessage For="@(() => user.DateOfBirth)" />
    </div>
    <div class="form-check mb-3">
        <label for="confirmed" class="form-check-label">Confirmed</label>
        <InputCheckbox id="confirmed" @bind-Value="user.IsConfirmed" class="form-check-input mb-3"></InputCheckbox>
        <ValidationMessage For="@(() => user.IsConfirmed)" />
    </div>
    <button type="submit" class="btn btn-primary mb-3">Register</button>
</EditForm>

@code {
    UserRegister user = new UserRegister();

    protected override async Task OnInitializedAsync()
    {
        await UnitService.LoadUnitsAsync();
    }

    async void HandleRegistration()
    {
        var result = await AuthService.Register(user);
        if (result.Success)
        {
            ToastService.ShowSuccess(result.Message.ToString());
            NavigationManager.NavigateTo("/");
        }
        else
        {
            ToastService.ShowError("An error occured");
        }
    }
}

